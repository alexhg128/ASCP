{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common.service.ts","./src/app/connect/connect.component.ts","./src/app/connect/connect.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConnectComponent } from './connect/connect.component';\nimport { LoginComponent } from './login/login.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'messages',\n    component: MessagesComponent\n  },\n  {\n    path: 'connect',\n    component: ConnectComponent\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {  \n  \n\n}","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ConnectComponent } from './connect/connect.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ConnectComponent,\n    MessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  private contact = '';\n  private userToken = '';\n  private objectId = '';\n\n  constructor(private http: HttpClient) { }\n\n  public getContact() {\n    return this.contact;\n  }\n\n  public setContact(contact: string) {\n    this.contact = contact;\n  }\n\n  public login(email: string, password: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.http.post('https://api.backendless.com/9176FE65-2FB5-2B00-FFED-BEB6A480BC00/0397420A-AA65-4BA2-9A1F-D4C9583099C8/users/login', {\n        'login': email,\n        'password': password\n      })\n      .toPromise()\n      .then((data: any) => {\n        this.userToken = data['user-token'];\n        this.objectId = data['objectId'];\n        resolve();\n      }).catch(e => {\n        reject();\n      })\n    })\n  }\n\n  public updateIp(ip: string) {\n    return this.http.put(`https://api.backendless.com/9176FE65-2FB5-2B00-FFED-BEB6A480BC00/0397420A-AA65-4BA2-9A1F-D4C9583099C8/data/Users/${ this.objectId }`, {\n      \"last_ip\": ip\n    }, {\n      headers: {\n        \"user-token\": this.userToken\n      }\n    })\n    .toPromise()\n    .then(data => {\n      console.log(data);\n    })\n    .catch(e => {\n      console.log(e);\n    })\n  }\n\n  public lookup(email: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      this.http.get(`https://api.backendless.com/9176FE65-2FB5-2B00-FFED-BEB6A480BC00/0397420A-AA65-4BA2-9A1F-D4C9583099C8/data/Users?where=email%3D%27${ email }%27`, {\n        headers: {\n          'user-token': this.userToken\n        }\n      })\n      .toPromise()\n      .then((data: any[]) => {\n        if(data.length > 0) {\n          resolve(data[0]['last_ip']);\n        } else {\n          reject();\n        }\n      })\n      .catch(e => {\n        reject();\n      })\n    })\n    \n  }\n\n}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../common.service';\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-connect',\n  templateUrl: './connect.component.html',\n  styleUrls: ['./connect.component.scss']\n})\nexport class ConnectComponent implements OnInit {\n\n  ip: string = '127.0.0.1';\n\n  validIP: string[] = [\n\n  ]\n\n  error: boolean = false;\n\n  constructor(private zone: NgZone, private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    electron.ipcRenderer.on('ip-list', (event, arg) => {\n      console.log(arg);\n      this.zone.run(() => {\n        this.validIP = arg;\n      });\n    });\n\n    electron.ipcRenderer.send('ip-check', {});\n\n  }\n\n  connect() {\n    this.error = false;\n    this.common.updateIp(this.ip)\n    .then(() => {\n      this.router.navigate(['messages']);\n    })\n    .catch(() => {\n      this.error = true;\n    })\n  }\n\n}\n","<div class=\"row align-items-center\" style=\"height: 100vh;\">\n    <div class=\"col-sm-12 col-md-8 col-lg-6 offset-md-2 offset-lg-3\">\n        <div class=\"ascp-container\">\n            <div class=\"container\" style=\"text-align: center; padding: 50px;\">\n                <br><br>\n                <h3><b>Select your IP</b></h3><br>\n                <h5 style=\"color: red;\" *ngIf=\"error\">Unexpected error, try again later</h5>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ip\" id=\"127.0.0.1\" value=\"127.0.0.1\" [(ngModel)]=\"ip\" checked>\n                    <label class=\"form-check-label\" for=\"127.0.0.1\">\n                      127.0.0.1\n                    </label>\n                </div>\n\n                <div class=\"form-check\" *ngFor=\"let x of validIP\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ip\" [id]=\"x\" [value]=\"x\" [(ngModel)]=\"ip\">\n                    <label class=\"form-check-label\" [for]=\"x\">\n                      {{ x }}\n                    </label>\n                </div>\n                <br>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"connect()\">Continue</button>\n                <br><br>\n                <br>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../common.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string = '';\n  password: string = '';\n\n  error: boolean = false;\n  invalid: boolean = false;\n\n  constructor(private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.error = false;\n    if(this.validate()) {\n      this.invalid = false;\n    } else {\n      this.invalid = true;\n      return;\n    }\n    this.common.login(this.email, this.password)\n    .then(() => {\n      this.password = ''\n      this.email = ''\n      this.router.navigate(['connect']);\n    }).catch(() => {\n      this.error = true;\n    })\n  }\n\n  validate() {\n    if(this.password.length < 2) {\n      return false;\n    }\n    const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n    const exp = new RegExp(regex);\n    if(exp.test(this.email)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n","<div class=\"row align-items-center\" style=\"height: 100vh;\">\n    <div class=\"col-sm-12 col-md-8 col-lg-6 offset-md-2 offset-lg-3\">\n        <div class=\"ascp-container\">\n            <div class=\"container\" style=\"text-align: center; padding: 50px;\">\n                <br><br>\n                <h3><b>Login</b></h3><br>\n                <h5 style=\"color: red;\" *ngIf=\"error\">Email and/or password is not correct</h5>\n                <h5 style=\"color: red;\" *ngIf=\"invalid\">Please enter a valid email</h5>\n                <div class=\"form-group\">\n                    <br>\n                    <label for=\"exampleFormControlInput1\">✉️ Email</label>\n                    <input type=\"email\" class=\"form-control\" name=\"email\" ngDefaultControl [(ngModel)]=\"email\">\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <label for=\"exampleFormControlInput1\">🔑 Password</label>\n                    <input type=\"password\" class=\"form-control\" name=\"password\" ngDefaultControl [(ngModel)]=\"password\">\n                </div>\n                <br>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">Login</button>\n                <br><br>\n                <br><br>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  blockButton: boolean = false;\n  user:string;\n  address:string;\n  messageText:string;\n  key:string;\n  messageArray:Message[] = [\n  ];\n  encrypted:boolean = false;\n\n  ipValidator(event: KeyboardEvent) {\n    switch(event.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '.':\n        break;\n      default:\n        var value = ((event.target as any).value as string);\n        (event.target as any).value = value.substring(0, value.length - 1);\n    }\n  }\n\n  hexValidator(event: KeyboardEvent) {\n    switch(event.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case 'a':\n      case 'b':\n      case 'c':\n      case 'd':\n      case 'e':\n      case 'f':\n      case 'A':\n      case 'B':\n      case 'C':\n      case 'D':\n      case 'E':\n      case 'F':\n        break;\n      default:\n        var value = ((event.target as any).value as string);\n        (event.target as any).value = value.substring(0, value.length - 1);\n    }\n  }\n\n  \n  constructor(private zone: NgZone, private common: CommonService) {\n    \n  }\n\n  ngOnInit() {\n    electron.ipcRenderer.on('message', (event, arg) => {\n      console.log(arg);\n      this.zone.run(() => {\n        this.messageArray.push({\n          user: this.address,\n          message: arg['message'],\n          valid: arg['valid']\n        });\n        \n      });\n    });\n\n    electron.ipcRenderer.on('status', (event, arg) => {\n      console.log(arg) \n      this.zone.run(() => {\n        this.updateStatus(arg);\n      });\n    });\n\n    electron.ipcRenderer.on('adress', (event, arg) => {\n      console.log(arg)\n      this.zone.run(() => {\n        this.address = arg;\n      });\n    });\n\n    electron.ipcRenderer.on('key', (event, arg) => {\n      console.log(arg)\n      this.zone.run(() => {\n        this.key = arg;\n        this.encrypted = !this.encrypted;\n      });\n    });\n  }\n\n  private updateStatus(status:Status) {\n    // TODO:\n    if(status == Status.LISTENING) {\n      // No esta conectado\n      // Desbloquear botones\n      this.blockButton = false;\n      this.encrypted = false;\n    } else {\n      // Conectado\n      // Bloquar botones\n      this.blockButton = true;\n    }\n  }\n\n  send() {\n    console.log(\"Sending\");\n    electron.ipcRenderer.send('message', this.messageText);\n    this.messageArray.push({\n      user:'Me',\n      message: this.messageText,\n      valid: true\n    });\n  }\n\n  diconnect() {\n    this.encrypted = false;\n    console.log(\"Disconnecting\");\n    electron.ipcRenderer.send('disconnect');\n  }\n\n  invalidContact: boolean = false;\n\n  connect(address: string) {\n    this.invalidContact = false;\n    const ipR = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/\n    const emR = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n    const ipExp = new RegExp(ipR);\n    const emExp = new RegExp(emR); \n\n    if(emExp.test(address)) {\n      console.log(\"email\")\n      this.common.lookup(address)\n      .then((ip) => {\n        console.log(ip)\n        electron.ipcRenderer.send('connect', ip);\n      })\n      .catch(e => {\n        console.log(\"not found\")\n        this.invalidContact = true;\n      })\n    } else if(ipExp.test(address)) {\n      console.log(\"IP\");\n      electron.ipcRenderer.send('connect', address);\n    } else {\n      console.log(\"neither email or ip\")\n      this.invalidContact = true;\n    }\n  }\n\n  setKey(key: string) {\n    if(!key) {\n      return;\n    }\n    if(key.length < 16) {\n      for(var i = 0; i < 16 - key.length; i++) {\n        key = '0' + key;\n      }\n      console.log(key);\n    }\n    electron.ipcRenderer.send('key', key);\n    this.encrypted = !this.encrypted;\n  }\n\n  resetKey() {\n    console.log(\"Reset key\");\n    electron.ipcRenderer.send('reset-key');\n    this.encrypted = !this.encrypted;\n  }\n\n  clear() {\n    this.messageArray = [];\n  }\n\n  integrity: boolean = true;\n\n  toogleIntegrity() {\n    electron.ipcRenderer.send('toogle-integrity');\n    this.integrity = !this.integrity;\n  }\n\n}\n\ninterface Message {\n  user: string;\n  message:string;\n  valid:boolean;\n}\n\nenum Status {\n  CONNECTED_SERVER,\n  CONNECTED_CLIENT,\n  LISTENING\n}","<div class=\"ascp-container\">\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <div class=\"container\" style=\"height: 90vh; border-right: 1px solid #d3d3d3; text-align: center;\">\n                <br>\n                <h3><b>ASCP Messanger</b></h3>\n                <br>\n                <h5 *ngIf=\"blockButton\"><b>✅ Connected</b></h5>\n                <h5 *ngIf=\"!blockButton\"><b>❌ Disconnected</b></h5>\n                <h5 *ngIf=\"encrypted\"><b>🔐 Secure</b></h5>\n                <h5 *ngIf=\"!encrypted\"><b>🔓 Insecure</b></h5>\n                <h5 *ngIf=\"invalidContact\"><b>❌ Invalid Contact</b></h5>\n                <br>\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">🖥 Contact</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"example@example.com\" [disabled]=\"blockButton\"\n                        [(ngModel)]=\"address\">\n                </div>\n                <button *ngIf=\"!blockButton\" type=\"submit\" class=\"btn btn-primary\"\n                    (click)=\"connect(address)\">Connect</button>\n                <button *ngIf=\"blockButton\" type=\"submit\" class=\"btn btn-primary\"\n                    (click)=\"diconnect()\">Disconnect</button>\n\n\n                <div class=\"form-group\">\n                    <br>\n                    <label for=\"exampleFormControlInput1\">🔑 Key</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"00000000000000\" [disabled]=\"encrypted\"\n                        maxlength=\"16\" [(ngModel)]=\"key\">\n                </div>\n                <button *ngIf=\"!encrypted\" type=\"submit\" class=\"btn btn-primary\" (click)=\"setKey(this.key)\">Set\n                    Key</button>\n                <button *ngIf=\"encrypted\" type=\"submit\" class=\"btn btn-primary\" (click)=\"resetKey()\">Delete Key</button>\n                <br><br>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"clear()\">Clear Messages</button>\n                <br /><br />\n                <button *ngIf=\"integrity\" type=\"submit\" class=\"btn btn-link\" (click)=\"toogleIntegrity()\">Disable\n                    Outgoing Integrity</button>\n                <button *ngIf=\"!integrity\" type=\"submit\" class=\"btn btn-link\" (click)=\"toogleIntegrity()\">Enable\n                    Outgoing Integrity</button>\n            </div>\n        </div>\n\n        <div class=\"col-8\">\n            <div class=\"ascp-messages\" style=\"padding-right: 2rem; padding-bottom: 2rem !important;\">\n                <br>\n\n                <ng-container *ngFor=\"let msg of messageArray\">\n                    <div *ngIf=\"msg.user == 'Me'\" style=\"display: flex; justify-content: flex-end\">\n                        <div class=\"message-sent-cont\">\n                            <p class=\"message-sent\">\n                                {{ msg.message }}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"msg.user != 'Me'\" style=\"display: flex; justify-content: flex-start\">\n                        <div class=\"message-recv-cont\">\n                            <p class=\"failed-integrity\" *ngIf=\"!msg.valid\"><i\n                                    class=\"material-icons-round\">privacy_tip</i> The integrity of the following message\n                                cannot be confirmed.</p>\n                            <p class=\"message-recv\">\n                                {{ msg.message }}\n                            </p>\n                        </div>\n                    </div>\n                </ng-container>\n\n\n            </div>\n            <div class=\"ascp-form\">\n                <div class=\"row\">\n                    <div class=\"col-10\" style=\"padding: 0;\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Message\" [disabled]=\"!blockButton\"\n                            (keyup.enter)=\"send(); this.messageText = ''\" [(ngModel)]=\"messageText\" maxlength=\"236\">\n                    </div>\n                    <div class=\"col-2\" style=\"text-align: left;\">\n                        <button type=\"submit\" class=\"btn btn-primary\" style=\"padding-bottom: 0;\"\n                            [disabled]=\"!blockButton\" (click)=\"send(); this.messageText = ''\"><i\n                                class=\"material-icons-round\">send</i></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}