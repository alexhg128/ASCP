{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common.service.ts","webpack:///src/app/connect/connect.component.ts","webpack:///src/app/connect/connect.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CommonService","http","contact","userToken","objectId","email","password","reject","post","toPromise","data","ip","put","headers","console","log","get","length","providedIn","electron","window","require","ConnectComponent","zone","common","router","validIP","error","ipcRenderer","on","event","arg","run","send","updateIp","navigate","connect","LoginComponent","invalid","validate","login","regex","exp","RegExp","test","MessagesComponent","blockButton","messageArray","encrypted","invalidContact","integrity","key","value","target","substring","push","user","address","message","valid","updateStatus","status","Status","LISTENING","messageText","ipR","emR","ipExp","emExp","lookup","i","clear","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ConnectComponent } from './connect/connect.component';\nimport { LoginComponent } from './login/login.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'messages',\n    component: MessagesComponent\n  },\n  {\n    path: 'connect',\n    component: ConnectComponent\n  },\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {  \n  \n\n}","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { ConnectComponent } from './connect/connect.component';\nimport { MessagesComponent } from './messages/messages.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ConnectComponent,\n    MessagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  private contact = '';\n  private userToken = '';\n  private objectId = '';\n\n  constructor(private http: HttpClient) { }\n\n  public getContact() {\n    return this.contact;\n  }\n\n  public setContact(contact: string) {\n    this.contact = contact;\n  }\n\n  public login(email: string, password: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      this.http.post('https://api.backendless.com/9176FE65-2FB5-2B00-FFED-BEB6A480BC00/0397420A-AA65-4BA2-9A1F-D4C9583099C8/users/login', {\n        'login': email,\n        'password': password\n      })\n      .toPromise()\n      .then((data: any) => {\n        this.userToken = data['user-token'];\n        this.objectId = data['objectId'];\n        resolve();\n      }).catch(e => {\n        reject();\n      })\n    })\n  }\n\n  public updateIp(ip: string) {\n    return this.http.put(`https://api.backendless.com/9176FE65-2FB5-2B00-FFED-BEB6A480BC00/0397420A-AA65-4BA2-9A1F-D4C9583099C8/data/Users/${ this.objectId }`, {\n      \"last_ip\": ip\n    }, {\n      headers: {\n        \"user-token\": this.userToken\n      }\n    })\n    .toPromise()\n    .then(data => {\n      console.log(data);\n    })\n    .catch(e => {\n      console.log(e);\n    })\n  }\n\n  public lookup(email: string): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      this.http.get(`https://api.backendless.com/9176FE65-2FB5-2B00-FFED-BEB6A480BC00/0397420A-AA65-4BA2-9A1F-D4C9583099C8/data/Users?where=email%3D%27${ email }%27`, {\n        headers: {\n          'user-token': this.userToken\n        }\n      })\n      .toPromise()\n      .then((data: any[]) => {\n        if(data.length > 0) {\n          resolve(data[0]['last_ip']);\n        } else {\n          reject();\n        }\n      })\n      .catch(e => {\n        reject();\n      })\n    })\n    \n  }\n\n}\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../common.service';\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-connect',\n  templateUrl: './connect.component.html',\n  styleUrls: ['./connect.component.scss']\n})\nexport class ConnectComponent implements OnInit {\n\n  ip: string = '127.0.0.1';\n\n  validIP: string[] = [\n\n  ]\n\n  error: boolean = false;\n\n  constructor(private zone: NgZone, private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n\n    electron.ipcRenderer.on('ip-list', (event, arg) => {\n      console.log(arg);\n      this.zone.run(() => {\n        this.validIP = arg;\n      });\n    });\n\n    electron.ipcRenderer.send('ip-check', {});\n\n  }\n\n  connect() {\n    this.error = false;\n    this.common.updateIp(this.ip)\n    .then(() => {\n      this.router.navigate(['messages']);\n    })\n    .catch(() => {\n      this.error = true;\n    })\n  }\n\n}\n","<div class=\"row align-items-center\" style=\"height: 100vh;\">\n    <div class=\"col-sm-12 col-md-8 col-lg-6 offset-md-2 offset-lg-3\">\n        <div class=\"ascp-container\">\n            <div class=\"container\" style=\"text-align: center; padding: 50px;\">\n                <br><br>\n                <h3><b>Select your IP</b></h3><br>\n                <h5 style=\"color: red;\" *ngIf=\"error\">Unexpected error, try again later</h5>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ip\" id=\"127.0.0.1\" value=\"127.0.0.1\" [(ngModel)]=\"ip\" checked>\n                    <label class=\"form-check-label\" for=\"127.0.0.1\">\n                      127.0.0.1\n                    </label>\n                </div>\n\n                <div class=\"form-check\" *ngFor=\"let x of validIP\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"ip\" [id]=\"x\" [value]=\"x\" [(ngModel)]=\"ip\">\n                    <label class=\"form-check-label\" [for]=\"x\">\n                      {{ x }}\n                    </label>\n                </div>\n                <br>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"connect()\">Continue</button>\n                <br><br>\n                <br>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonService } from '../common.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  email: string = '';\n  password: string = '';\n\n  error: boolean = false;\n  invalid: boolean = false;\n\n  constructor(private common: CommonService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login() {\n    this.error = false;\n    if(this.validate()) {\n      this.invalid = false;\n    } else {\n      this.invalid = true;\n      return;\n    }\n    this.common.login(this.email, this.password)\n    .then(() => {\n      this.password = ''\n      this.email = ''\n      this.router.navigate(['connect']);\n    }).catch(() => {\n      this.error = true;\n    })\n  }\n\n  validate() {\n    if(this.password.length < 2) {\n      return false;\n    }\n    const regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n    const exp = new RegExp(regex);\n    if(exp.test(this.email)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n","<div class=\"row align-items-center\" style=\"height: 100vh;\">\n    <div class=\"col-sm-12 col-md-8 col-lg-6 offset-md-2 offset-lg-3\">\n        <div class=\"ascp-container\">\n            <div class=\"container\" style=\"text-align: center; padding: 50px;\">\n                <br><br>\n                <h3><b>Login</b></h3><br>\n                <h5 style=\"color: red;\" *ngIf=\"error\">Email and/or password is not correct</h5>\n                <h5 style=\"color: red;\" *ngIf=\"invalid\">Please enter a valid email</h5>\n                <div class=\"form-group\">\n                    <br>\n                    <label for=\"exampleFormControlInput1\">✉️ Email</label>\n                    <input type=\"email\" class=\"form-control\" name=\"email\" ngDefaultControl [(ngModel)]=\"email\">\n                </div>\n                <div class=\"form-group\">\n                    <br>\n                    <label for=\"exampleFormControlInput1\">🔑 Password</label>\n                    <input type=\"password\" class=\"form-control\" name=\"password\" ngDefaultControl [(ngModel)]=\"password\">\n                </div>\n                <br>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">Login</button>\n                <br><br>\n                <br><br>\n            </div>\n</div>\n    </div>\n</div>","import { Component, NgZone, OnInit } from '@angular/core';\nimport { CommonService } from '../common.service';\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.scss']\n})\nexport class MessagesComponent implements OnInit {\n\n  blockButton: boolean = false;\n  user:string;\n  address:string;\n  messageText:string;\n  key:string;\n  messageArray:Message[] = [\n  ];\n  encrypted:boolean = false;\n\n  ipValidator(event: KeyboardEvent) {\n    switch(event.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '.':\n        break;\n      default:\n        var value = ((event.target as any).value as string);\n        (event.target as any).value = value.substring(0, value.length - 1);\n    }\n  }\n\n  hexValidator(event: KeyboardEvent) {\n    switch(event.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case 'a':\n      case 'b':\n      case 'c':\n      case 'd':\n      case 'e':\n      case 'f':\n      case 'A':\n      case 'B':\n      case 'C':\n      case 'D':\n      case 'E':\n      case 'F':\n        break;\n      default:\n        var value = ((event.target as any).value as string);\n        (event.target as any).value = value.substring(0, value.length - 1);\n    }\n  }\n\n  \n  constructor(private zone: NgZone, private common: CommonService) {\n    \n  }\n\n  ngOnInit() {\n    electron.ipcRenderer.on('message', (event, arg) => {\n      console.log(arg);\n      this.zone.run(() => {\n        this.messageArray.push({\n          user: this.address,\n          message: arg['message'],\n          valid: arg['valid']\n        });\n        \n      });\n    });\n\n    electron.ipcRenderer.on('status', (event, arg) => {\n      console.log(arg) \n      this.zone.run(() => {\n        this.updateStatus(arg);\n      });\n    });\n\n    electron.ipcRenderer.on('adress', (event, arg) => {\n      console.log(arg)\n      this.zone.run(() => {\n        this.address = arg;\n      });\n    });\n\n    electron.ipcRenderer.on('key', (event, arg) => {\n      console.log(arg)\n      this.zone.run(() => {\n        this.key = arg;\n        this.encrypted = !this.encrypted;\n      });\n    });\n  }\n\n  private updateStatus(status:Status) {\n    // TODO:\n    if(status == Status.LISTENING) {\n      // No esta conectado\n      // Desbloquear botones\n      this.blockButton = false;\n      this.encrypted = false;\n    } else {\n      // Conectado\n      // Bloquar botones\n      this.blockButton = true;\n    }\n  }\n\n  send() {\n    console.log(\"Sending\");\n    electron.ipcRenderer.send('message', this.messageText);\n    this.messageArray.push({\n      user:'Me',\n      message: this.messageText,\n      valid: true\n    });\n  }\n\n  diconnect() {\n    this.encrypted = false;\n    console.log(\"Disconnecting\");\n    electron.ipcRenderer.send('disconnect');\n  }\n\n  invalidContact: boolean = false;\n\n  connect(address: string) {\n    this.invalidContact = false;\n    const ipR = /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/\n    const emR = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/\n    const ipExp = new RegExp(ipR);\n    const emExp = new RegExp(emR); \n\n    if(emExp.test(address)) {\n      console.log(\"email\")\n      this.common.lookup(address)\n      .then((ip) => {\n        console.log(ip)\n        electron.ipcRenderer.send('connect', ip);\n      })\n      .catch(e => {\n        console.log(\"not found\")\n        this.invalidContact = true;\n      })\n    } else if(ipExp.test(address)) {\n      console.log(\"IP\");\n      electron.ipcRenderer.send('connect', address);\n    } else {\n      console.log(\"neither email or ip\")\n      this.invalidContact = true;\n    }\n  }\n\n  setKey(key: string) {\n    if(!key) {\n      return;\n    }\n    if(key.length < 16) {\n      for(var i = 0; i < 16 - key.length; i++) {\n        key = '0' + key;\n      }\n      console.log(key);\n    }\n    electron.ipcRenderer.send('key', key);\n    this.encrypted = !this.encrypted;\n  }\n\n  resetKey() {\n    console.log(\"Reset key\");\n    electron.ipcRenderer.send('reset-key');\n    this.encrypted = !this.encrypted;\n  }\n\n  clear() {\n    this.messageArray = [];\n  }\n\n  integrity: boolean = true;\n\n  toogleIntegrity() {\n    electron.ipcRenderer.send('toogle-integrity');\n    this.integrity = !this.integrity;\n  }\n\n}\n\ninterface Message {\n  user: string;\n  message:string;\n  valid:boolean;\n}\n\nenum Status {\n  CONNECTED_SERVER,\n  CONNECTED_CLIENT,\n  LISTENING\n}","<div class=\"ascp-container\">\n    <div class=\"row\">\n        <div class=\"col-4\">\n            <div class=\"container\" style=\"height: 90vh; border-right: 1px solid #d3d3d3; text-align: center;\">\n                <br>\n                <h3><b>ASCP Messanger</b></h3>\n                <br>\n                <h5 *ngIf=\"blockButton\"><b>✅ Connected</b></h5>\n                <h5 *ngIf=\"!blockButton\"><b>❌ Disconnected</b></h5>\n                <h5 *ngIf=\"encrypted\"><b>🔐 Secure</b></h5>\n                <h5 *ngIf=\"!encrypted\"><b>🔓 Insecure</b></h5>\n                <h5 *ngIf=\"invalidContact\"><b>❌ Invalid Contact</b></h5>\n                <br>\n                <div class=\"form-group\">\n                    <label for=\"exampleFormControlInput1\">🖥 Contact</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"example@example.com\" [disabled]=\"blockButton\"\n                        [(ngModel)]=\"address\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\"\n                    (click)=\"connect(address)\">Connect</button>\n                <button *ngIf=\"blockButton\" type=\"submit\" class=\"btn btn-primary\"\n                    (click)=\"diconnect()\">Disconnect</button>\n\n\n                <div class=\"form-group\">\n                    <br>\n                    <label for=\"exampleFormControlInput1\">🔑 Key</label>\n                    <input type=\"text\" class=\"form-control\" placeholder=\"00000000000000\" [disabled]=\"encrypted\"\n                        maxlength=\"16\" [(ngModel)]=\"key\">\n                </div>\n                <button *ngIf=\"!encrypted\" type=\"submit\" class=\"btn btn-primary\" (click)=\"setKey(this.key)\">Set\n                    Key</button>\n                <button *ngIf=\"encrypted\" type=\"submit\" class=\"btn btn-primary\" (click)=\"resetKey()\">Delete Key</button>\n                <br><br>\n                <button type=\"submit\" class=\"btn btn-primary\" (click)=\"clear()\">Clear Messages</button>\n                <br /><br />\n                <button *ngIf=\"integrity\" type=\"submit\" class=\"btn btn-link\" (click)=\"toogleIntegrity()\">Disable\n                    Outgoing Integrity</button>\n                <button *ngIf=\"!integrity\" type=\"submit\" class=\"btn btn-link\" (click)=\"toogleIntegrity()\">Enable\n                    Outgoing Integrity</button>\n            </div>\n        </div>\n\n        <div class=\"col-8\">\n            <div class=\"ascp-messages\" style=\"padding-right: 2rem; padding-bottom: 2rem !important;\">\n                <br>\n\n                <ng-container *ngFor=\"let msg of messageArray\">\n                    <div *ngIf=\"msg.user == 'Me'\" style=\"display: flex; justify-content: flex-end\">\n                        <div class=\"message-sent-cont\">\n                            <p class=\"message-sent\">\n                                {{ msg.message }}\n                            </p>\n                        </div>\n                    </div>\n\n                    <div *ngIf=\"msg.user != 'Me'\" style=\"display: flex; justify-content: flex-start\">\n                        <div class=\"message-recv-cont\">\n                            <p class=\"failed-integrity\" *ngIf=\"!msg.valid\"><i\n                                    class=\"material-icons-round\">privacy_tip</i> The integrity of the following message\n                                cannot be confirmed.</p>\n                            <p class=\"message-recv\">\n                                {{ msg.message }}\n                            </p>\n                        </div>\n                    </div>\n                </ng-container>\n\n\n            </div>\n            <div class=\"ascp-form\">\n                <div class=\"row\">\n                    <div class=\"col-10\" style=\"padding: 0;\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Message\" [disabled]=\"!blockButton\"\n                            (keyup.enter)=\"send(); this.messageText = ''\" [(ngModel)]=\"messageText\" maxlength=\"236\">\n                    </div>\n                    <div class=\"col-2\" style=\"text-align: left;\">\n                        <button type=\"submit\" class=\"btn btn-primary\" style=\"padding-bottom: 0;\"\n                            [disabled]=\"!blockButton\" (click)=\"send(); this.messageText = ''\"><i\n                                class=\"material-icons-round\">send</i></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}