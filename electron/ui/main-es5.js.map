{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","electron","window","require","AppComponent","zone","title","blockButton","messageArray","encrypted","ipcRenderer","on","event","arg","console","log","run","push","user","address","message","updateStatus","key","value","target","substring","length","status","Status","LISTENING","send","messageText","i","ipValidator","clear","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, NgZone } from '@angular/core';\nconst electron = (<any>window).require('electron');\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  title = 'ascp';\n  blockButton: Boolean = false;\n  user:string;\n  address:string;\n  messageText:string;\n  key:string;\n  messageArray:Message[] = [\n  ];\n  encrypted:boolean = false;\n\n  ipValidator(event: KeyboardEvent) {\n    switch(event.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '.':\n        break;\n      default:\n        var value = ((event.target as any).value as string);\n        (event.target as any).value = value.substring(0, value.length - 1);\n    }\n  }\n\n  hexValidator(event: KeyboardEvent) {\n    switch(event.key) {\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case 'a':\n      case 'b':\n      case 'c':\n      case 'd':\n      case 'e':\n      case 'f':\n      case 'A':\n      case 'B':\n      case 'C':\n      case 'D':\n      case 'E':\n      case 'F':\n        break;\n      default:\n        var value = ((event.target as any).value as string);\n        (event.target as any).value = value.substring(0, value.length - 1);\n    }\n  }\n\n  \n  constructor(private zone: NgZone) {\n    electron.ipcRenderer.on('message', (event, arg) => {\n      console.log(arg);\n      zone.run(() => {\n        this.messageArray.push({\n          user: this.address,\n          message: arg\n        });\n        \n      });\n    });\n\n    electron.ipcRenderer.on('status', (event, arg) => {\n      console.log(arg) \n      zone.run(() => {\n        this.updateStatus(arg);\n      });\n    });\n\n    electron.ipcRenderer.on('adress', (event, arg) => {\n      console.log(arg)\n      zone.run(() => {\n        this.address = arg;\n      });\n    });\n\n    electron.ipcRenderer.on('key', (event, arg) => {\n      console.log(arg)\n      zone.run(() => {\n        this.key = arg;\n        this.encrypted = !this.encrypted;\n      });\n    });\n  }\n\n  private updateStatus(status:Status) {\n    // TODO:\n    if(status == Status.LISTENING) {\n      // No esta conectado\n      // Desbloquear botones\n      this.blockButton = false;\n      this.encrypted = false;\n    } else {\n      // Conectado\n      // Bloquar botones\n      this.blockButton = true;\n    }\n  }\n\n  send() {\n    console.log(\"Sending\");\n    electron.ipcRenderer.send('message', this.messageText);\n    this.messageArray.push({\n      user:'Me',\n      message: this.messageText\n    });\n  }\n\n  diconnect() {\n    this.encrypted = false;\n    console.log(\"Disconnecting\");\n    electron.ipcRenderer.send('disconnect');\n  }\n\n  connect(address: string) {\n    console.log(\"Connecting\");\n    electron.ipcRenderer.send('connect', address);\n  }\n\n  setKey(key: string) {\n    if(!key) {\n      return;\n    }\n    if(key.length < 16) {\n      for(var i = 0; i < 16 - key.length; i++) {\n        key = '0' + key;\n      }\n      console.log(key);\n    }\n    electron.ipcRenderer.send('key', key);\n    this.encrypted = !this.encrypted;\n  }\n\n  resetKey() {\n    console.log(\"Reset key\");\n    electron.ipcRenderer.send('reset-key');\n    this.encrypted = !this.encrypted;\n  }\n\n  clear() {\n    this.messageArray = [];\n  }\n  \n\n}\n\ninterface Message {\n  user: string;\n  message:string;\n}\n\nenum Status {\n  CONNECTED_SERVER,\n  CONNECTED_CLIENT,\n  LISTENING\n}","<div class=\"ascp-container\">\n\n  <div class=\"row\">\n    <div class=\"col-4\" >\n      <div class=\"container\" style=\"height: 90vh; border-right: 1px solid #d3d3d3; text-align: center;\">\n        <br>\n        <h3><b>ASCP Messanger</b></h3>\n        <br>\n        <h5 *ngIf=\"blockButton\"><b>✅ Connected</b></h5>\n        <h5 *ngIf=\"!blockButton\"><b>❌ Disconnected</b></h5>\n        <h5 *ngIf=\"encrypted\"><b>🔐 Secure</b></h5>\n        <h5 *ngIf=\"!encrypted\"><b>🔓  Insecure</b></h5>\n        <br>\n        <div class=\"form-group\">\n          <label for=\"exampleFormControlInput1\">🖥 IP Address</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"0.0.0.0\" [disabled]=\"blockButton\" (keyup)=\"ipValidator($event)\" [(ngModel)]=\"address\">\n        </div>\n        <button *ngIf=\"!blockButton\" type=\"submit\" class=\"btn btn-primary\" (click)=\"connect(address)\">Connect</button>\n        <button *ngIf=\"blockButton\" type=\"submit\" class=\"btn btn-primary\" (click)=\"diconnect()\">Disconnect</button>\n\n        \n        <div class=\"form-group\">\n          <br>\n          <label for=\"exampleFormControlInput1\">🔑 Key</label>\n          <input type=\"text\" class=\"form-control\" placeholder=\"00000000000000\" [disabled]=\"encrypted\" maxlength=\"16\" [(ngModel)]=\"key\">\n        </div>\n        <button *ngIf=\"!encrypted\" type=\"submit\" class=\"btn btn-primary\" (click)=\"setKey(this.key)\">Set Key</button>\n        <button *ngIf=\"encrypted\" type=\"submit\" class=\"btn btn-primary\" (click)=\"resetKey()\">Delete Key</button>\n        <br><br>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"clear()\">Clear Messages</button>\n      </div>\n    </div>\n\n    <div class=\"col-8\">\n        <div class=\"ascp-messages\" style=\"padding-right: 2rem; padding-bottom: 2rem !important;\">\n          <br>\n\n          <ng-container *ngFor=\"let msg of messageArray\">\n            <div *ngIf=\"msg.user == 'Me'\" style=\"display: flex; justify-content: flex-end\">\n              <div class=\"message-sent-cont\">\n                <p class=\"message-sent\">\n                  {{ msg.message }}\n                </p>\n              </div>\n            </div>\n\n            <div *ngIf=\"msg.user != 'Me'\" style=\"display: flex; justify-content: flex-start\">\n              <div class=\"message-recv-cont\">\n                <p class=\"message-recv\">\n                  {{ msg.message }}\n                </p>\n              </div>\n            </div>\n          </ng-container>\n          \n\n        </div>\n        <div class=\"ascp-form\">\n          <div class=\"row\">\n            <div class=\"col-10\" style=\"padding: 0;\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Message\" [disabled]=\"!blockButton\" (keyup.enter)=\"send(); this.messageText = ''\" [(ngModel)]=\"messageText\" maxlength=\"236\">\n            </div>\n            <div class=\"col-2\" style=\"text-align: left;\">\n              <button type=\"submit\" class=\"btn btn-primary\" style=\"padding-bottom: 0;\" [disabled]=\"!blockButton\" (click)=\"send(); this.messageText = ''\"><i class=\"material-icons-round\">send</i></button>\n            </div>\n          </div>\n        </div>\n    </div>\n\n  </div>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}